## Project Informatie: Feedback Analyse & Visualisatie Applicatie

### Projectomschrijving
Een lokaal draaiende webapplicatie voor het analyseren en visualiseren van 360-graden feedbackresultaten. De applicatie verwerkt Excel-bestanden met feedbackdata, berekent gemiddelde scores per competentiegebied voor individuele medewerkers, en visualiseert deze in een interactieve radar chart waarbij individuele scores worden vergeleken met teamgemiddelden.

### Project Doel, Nut en Functie
**Doel:** Het mogelijk maken om op een visueel aantrekkelijke en inzichtelijke manier feedbackresultaten te analyseren en te presenteren, zodat medewerkers en managers direct kunnen zien waar iemands sterktes liggen en waar ontwikkelpunten zijn ten opzichte van het teamgemiddelde.

**Doelgroep:** HR-professionals, teamleiders en managers die 360-graden feedback processen faciliteren en de resultaten willen bespreken met medewerkers.

**Nut:** 
- Snelle visuele interpretatie van complexe feedbackdata
- Objectieve vergelijking tussen individuele prestaties en teamgemiddelden
- Identificatie van ontwikkelgebieden en sterktes per competentie
- Ondersteuning bij ontwikkelgesprekken en persoonlijke groeiplannen

**Belangrijke aandachtspunten:**
- Applicatie moet lokaal draaien (privacy-gevoelige data)
- Moet draaien op poort 5010
- Gebruik meest recente stabiele versies van packages
- "Weet ik niet" antwoorden moeten correct worden genegeerd bij berekeningen
- KLANTGERICHTHEID bestaat uit twee sub-competenties die gecombineerd moeten worden

### Architectuur/Modulestructuur

#### Backend (Python/Flask)
1. **app.py** - Hoofdapplicatie ✅ VOLTOOID
   - Flask server configuratie (poort 5010)
   - Routes: /, /upload, /get_scores/<person_name>, /status
   - In-memory data opslag voor verwerkte resultaten
   - CORS headers voor lokaal gebruik
   - Error handling voor verschillende scenario's
   - Mock data voor ontwikkeling en testing

2. **data_processor.py** - Dataverwerking module
   - Excel inlezen met pandas/openpyxl
   - Mapping van tekstuele antwoorden naar scores (4,3,2,1)
   - Competentie mapping (8 hoofdgebieden)
   - Berekening individuele en team gemiddelden

#### Frontend (HTML/CSS/JavaScript)
1. **templates/index.html** - Hoofdpagina ✅ VOLTOOID
   - Basis homepage met applicatie informatie
   - API endpoint documentatie
   - Styling voor professionele uitstraling
   - Placeholder voor toekomstige upload interface

2. **static/js/script.js** - Frontend logica
   - File upload handling
   - API communicatie met backend
   - Chart rendering aanroepen

3. **static/js/radarChart.js** - D3.js visualisatie
   - Radar chart implementatie
   - Dual dataset support (individueel vs team)

4. **static/css/style.css** - Styling

### Competentiegebieden (8 hoofdgebieden)
1. PROBLEEMANALYSE
2. KWALITEITSZORG
3. KLANTGERICHTHEID (gecombineerd uit "boodschap overbrengen" en "behoefte ophalen")
4. PROJECTMANAGEMENT
5. TEAMSPELER
6. COLLEGIALE ONTWIKKELING
7. LEIDERSCHAP EN INTEGRITEIT
8. INNOVATIE EN COMMERCIE

### Module Status
- requirements.txt: ✅ Voltooid (Flask 3.0.0, pandas 2.1.4, openpyxl 3.1.2, python-dotenv 1.0.0, Werkzeug 3.0.1)
- README.md: ✅ Voltooid (Uitgebreide documentatie met installatie en gebruik instructies)
- Mappenstructuur: ✅ Voltooid (templates/, static/css/, static/js/ aangemaakt)
- .gitignore: ✅ Voltooid (Python en project-specifieke exclusions)
- app.py: ✅ Voltooid (Flask backend core met alle routes en functionaliteit)
- templates/index.html: ✅ Voltooid (Basis homepage met API documentatie)
- data_processor.py: Nog te maken
- static/js/script.js: Nog te maken
- static/js/radarChart.js: Nog te maken
- static/css/style.css: Nog te maken